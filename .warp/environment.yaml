# QuestCraft Environment Configuration
# Environment variables and settings for different deployment scenarios

# Default environment variables
default_env:
  NODE_ENV: "development"
  PORT: "5000"
  SESSION_SECRET: "questcraft-secret-key-change-in-production"
  DEBUG: "questcraft:*"

# Environment-specific configurations
environments:
  development:
    name: "🛠️ Development"
    description: "Local development environment with debugging enabled"
    variables:
      NODE_ENV: "development"
      PORT: "5000"
      DEBUG: "questcraft:*,express:*"
      MONGODB_URI: "${MONGODB_URI:-mongodb://localhost:27017/questcraft_dev}"
      SESSION_SECRET: "questcraft-dev-secret"
    features:
      - "Auto-reload with nodemon"
      - "Detailed error messages"
      - "Debug logging enabled"
      - "In-memory sessions (resets on restart)"
    
  production:
    name: "🚀 Production"
    description: "Production environment with optimizations"
    variables:
      NODE_ENV: "production"
      PORT: "${PORT:-5000}"
      MONGODB_URI: "${MONGODB_URI}"
      SESSION_SECRET: "${SESSION_SECRET}"
      DEBUG: ""
    features:
      - "Optimized performance"
      - "Error logging"
      - "Persistent sessions (if configured)"
      - "Security hardening"
    security:
      - "Strong SESSION_SECRET required"
      - "HTTPS recommended"
      - "CORS configured"
      - "Input validation enabled"
      
  testing:
    name: "🧪 Testing"
    description: "Testing environment with isolated database"
    variables:
      NODE_ENV: "test"
      PORT: "5001"
      MONGODB_URI: "mongodb://localhost:27017/questcraft_test"
      SESSION_SECRET: "questcraft-test-secret"
      DEBUG: "questcraft:test"
    features:
      - "Isolated test database"
      - "Mock data generation"
      - "Test-specific logging"

# Required environment variables
required_variables:
  MONGODB_URI:
    description: "MongoDB Atlas connection string"
    example: "mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/questcraft"
    validation: "Must include cluster identifier (cluster0.xxxxx)"
    setup_instructions:
      - "Visit https://cloud.mongodb.com"
      - "Get connection string from your cluster"
      - "Add to environment variables"
      - "Run 'npm run init-db' to initialize"
      
# Optional environment variables  
optional_variables:
  SESSION_SECRET:
    description: "Secret key for session encryption"
    default: "questcraft-secret-key-change-in-production"
    recommendation: "Change in production for security"
    
  PORT:
    description: "Port number for the server"
    default: "5000"
    validation: "Should be available port (1024-65535)"
    
  DEBUG:
    description: "Debug logging configuration"
    default: "questcraft:*"
    examples:
      - "questcraft:*" # All QuestCraft logs
      - "questcraft:db" # Database logs only
      - "questcraft:auth" # Authentication logs only
      - "" # No debug logs
      
  UPLOAD_PATH:
    description: "Directory for uploaded files (avatars)"
    default: "./uploads"
    validation: "Must be writable directory"

# Environment checks
health_checks:
  mongodb_connection:
    command: "node -e \"require('./config/database')().then(connected => process.exit(connected ? 0 : 1))\""
    description: "Test MongoDB connection"
    critical: true
    
  port_availability:
    command: "lsof -ti:${PORT:-5000} >/dev/null && echo 'Port in use' || echo 'Port available'"
    description: "Check if port is available"
    critical: false
    
  node_version:
    command: "node --version"
    description: "Check Node.js version"
    minimum_version: "14.0.0"
    critical: true
    
  npm_packages:
    command: "npm list --depth=0 --silent"
    description: "Verify all packages are installed"
    critical: true

# Development utilities
dev_utilities:
  clear_env:
    description: "Clear environment variables for testing"
    command: "unset NODE_ENV PORT DEBUG MONGODB_URI SESSION_SECRET"
    warning: "This will unset environment variables"
    
  show_env:
    description: "Display current environment configuration"
    command: "echo 'Environment Variables:' && echo 'NODE_ENV:' $NODE_ENV && echo 'PORT:' $PORT && echo 'DEBUG:' $DEBUG && echo 'MONGODB_URI:' ${MONGODB_URI:0:30}..."
    
  validate_env:
    description: "Validate environment configuration"
    steps:
      - "Check required variables are set"
      - "Test MongoDB connection"
      - "Verify port availability"  
      - "Check file permissions"

# Quick environment setup commands
setup_commands:
  dev_setup:
    description: "Set up development environment"
    commands:
      - "export NODE_ENV=development"
      - "export PORT=5000"
      - "export DEBUG=questcraft:*"
      - "echo 'Development environment configured'"
      
  prod_setup:
    description: "Set up production environment"
    commands:
      - "export NODE_ENV=production"
      - "echo 'Set PORT and MONGODB_URI in your deployment platform'"
      - "echo 'Generate strong SESSION_SECRET'"
      
  test_setup:
    description: "Set up testing environment"  
    commands:
      - "export NODE_ENV=test"
      - "export PORT=5001"
      - "export MONGODB_URI=mongodb://localhost:27017/questcraft_test"

# Configuration templates
templates:
  env_file:
    description: ".env file template for local development"
    content: |
      # QuestCraft Environment Configuration
      NODE_ENV=development
      PORT=5000
      DEBUG=questcraft:*
      
      # MongoDB Atlas connection (required)
      MONGODB_URI=mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/questcraft
      
      # Session security (change in production)
      SESSION_SECRET=questcraft-secret-key-change-in-production
      
      # File uploads
      UPLOAD_PATH=./uploads
      
  docker_env:
    description: "Environment variables for Docker deployment"
    content: |
      NODE_ENV=production
      PORT=5000
      MONGODB_URI=${MONGODB_URI}
      SESSION_SECRET=${SESSION_SECRET}
      
# Environment validation rules
validation_rules:
  mongodb_uri:
    pattern: "^mongodb(\+srv)?://.*"
    message: "MONGODB_URI must be a valid MongoDB connection string"
    
  port:
    pattern: "^[1-9][0-9]{3,4}$"
    message: "PORT must be a number between 1024-65535"
    
  node_env:
    allowed_values: ["development", "production", "test"]
    message: "NODE_ENV must be development, production, or test"